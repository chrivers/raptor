[package]
name = "raptor"
version = "0.1.0"
description = "Build disk images, file archives and bootable isos with a simple, docker-inspired syntax"

readme.workspace = true
repository.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
categories.workspace = true
keywords.workspace = true

[workspace.package]
edition = "2024"
license = "GPL-3.0-only"
readme = "README.md"
categories = ["config", "command-line-utilities", "virtualization", "template-engine"]
repository = "https://github.com/chrivers/raptor"
keywords = ["devops", "reproducible", "disk-image", "generation"]
authors = ["Christian Iversen <ci@iversenit.dk>"]

[workspace]
members = [
    "crates/falcon",
    "crates/dregistry",
    "crates/raptor-parser",
]

[[test]]
name = "diagnostic"
harness = false

[[bin]]
name = "raptor"
test = false

[[bin]]
name = "debootwrap"
test = false

[lints]
workspace = true

[workspace.lints.rust]
unstable_features = "forbid"
unused_lifetimes = "warn"
unused_qualifications = "warn"
mismatched_lifetime_syntaxes = "allow"

[workspace.lints.clippy]
all         = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
pedantic    = { level = "warn", priority = -1 }
cargo       = { level = "warn", priority = -1 }
nursery     = { level = "warn", priority = -1 }
perf        = { level = "warn", priority = -1 }
style       = { level = "warn", priority = -1 }

multiple_crate_versions = "allow"
missing_errors_doc      = "allow"
missing_panics_doc      = "allow"
module_inception        = "allow"
similar_names           = "allow"

[workspace.dependencies]
raptor-parser = { version = "0.1.0", path = "crates/raptor-parser" }
dregistry = { version = "0.1.0", path = "crates/dregistry" }
falcon = { version = "0.1.0", path = "crates/falcon" }

annotate-snippets = "0.12.4"
anstream = { version = "0.6.20", default-features = false }
anstyle = { version = "1.0.11", default-features = false }
bincode = "2.0.1"
camino = "1.2.0"
camino-tempfile = "1.4.1"
clap = "4.5.48"
colog = "1.4.0"
colored = "3.0.0"
hex = "0.4.3"
itertools = "0.14.0"
libtest-mimic = "0.8.1"
log = "0.4.28"
minijinja = { version = "2.12.0", default-features = false }
nix = "0.30.1"
pest = "2.8.2"
pest_consume = "1.1.3"
pest_derive = "2.8.2"
reqwest = { version = "0.12.23", default-features = false }
serde = "1.0.227"
serde_json = "1.0.145"
serde_variant = "0.1.3"
serde_yml = "0.0.12"
thiserror = "2.0.16"
uuid = "1.18.1"
indicatif = "0.18.0"
pretty_assertions = "1.4.1"
logos = "0.15.1"

[dependencies]
annotate-snippets = { workspace = true }
anstream = { workspace = true, features = ["auto"] }
anstyle = { workspace = true, features = ["std"] }
camino = { workspace = true, features = ["serde1"] }
camino-tempfile = { workspace = true }
clap = { workspace = true, features = ["cargo", "derive", "string"] }
colog = { workspace = true }
colored = { workspace = true }
dregistry = { workspace = true }
falcon = { workspace = true }
indicatif = { workspace = true, features = ["improved_unicode"] }
itertools = { workspace = true }
log = { workspace = true }
minijinja = { workspace = true, features = ["custom_syntax", "debug", "deserialization", "loader", "loop_controls", "macros", "multi_template", "serde", "std_collections"] }
nix = { workspace = true, features = ["fs", "user"] }
pest = { workspace = true, features = ["pretty-print"] }
raptor-parser = { workspace = true }
serde = { workspace = true, features = ["serde_derive"] }
serde_variant = { workspace = true }
serde_yml = { workspace = true }
thiserror = { workspace = true }
uuid = { workspace = true, features = ["v4"] }

[dev-dependencies]
libtest-mimic = { workspace = true }
pretty_assertions = { workspace = true }
