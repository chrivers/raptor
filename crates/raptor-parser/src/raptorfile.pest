// Fundamental definitions
FILE = { SOI ~ (STATEMENT? ~ NEWLINE)* ~ EOI }

STATEMENT = {
    FROM
  | MOUNT
  | RENDER
  | WRITE
  | MKDIR
  | COPY
  | INCLUDE
  | INVOKE
  | RUN
  | ENV
  | WORKDIR
}

WHITESPACE = _{ " " | "\\\n" }

COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }

// Statements
COPY    = { "COPY"    ~ file_options  ~ filename{2,}                 }
RENDER  = { "RENDER"  ~ file_options  ~ filename{2}   ~ include_args }
WRITE   = { "WRITE"   ~ file_options  ~ quoted_string ~ filename     }
MKDIR   = { "MKDIR"   ~ parents_flag? ~ file_options  ~ filename     }
INCLUDE = { "INCLUDE" ~ module_name   ~ include_args                 }
INVOKE  = { "INVOKE"  ~ string+                                      }
RUN     = { "RUN"     ~ string+                                      }
FROM    = { "FROM"    ~ from_source                                  }
MOUNT   = { "MOUNT"   ~ mount_options ~ ident         ~ filename     }
ENV     = { "ENV"     ~ env_assign+                                  }
WORKDIR = { "WORKDIR" ~ filename                                     }

// String parsing
char_escape = _{ "\\" | "\"" | "n" | "r" | "t" }
string_non_escape = ${ (!("\\" | "\"") ~ ANY)+ }
string_escape_seq = ${ "\\" ~ char_escape }
string_inner = { (string_non_escape | string_escape_seq)* }

quoted_string = ${ "\"" ~ string_inner ~ "\"" }

literal_string = ${
    // for literal strings, the first character must be "reasonable", as
    // otherwise it gets very difficult to provide good error messages
    (ASCII_ALPHANUMERIC | "." | "_" | "/" | "-")

    // after this, we allow most printable characters
    ~ (
        ASCII_ALPHANUMERIC
      | '!' .. '['
      | ']' .. '~'
    )*
}

string      = { quoted_string | literal_string }

// Value types
bool        = { "true" | "false" }
number      = { ('1'..'9') ~ ('0'..'9')* }
module_name = { ident ~ ("." ~ ident)* }
value       = { bool | number | module_name | string }
filename    = { string }
user_spec   = { ident }
group_spec  = { ident }

// Identifiers
IDENT_START = _{ ASCII_ALPHA | "_" }
IDENT_CHAR  = _{ ASCII_ALPHA | "_" | ASCII_DIGIT }
ident = @{ IDENT_START ~ IDENT_CHAR* }

option_chown = ${
    user_spec ~ ":" ~ group_spec
  | user_spec ~ ":"
  | ":" ~ group_spec
  | user_spec
}
option_chmod = ${ ASCII_OCT_DIGIT{3,4} }

mb_eq = _{ "="? }
file_option = {
    ("--chown" ~ mb_eq ~ option_chown)
  | ("--chmod" ~ mb_eq ~ option_chmod)
}
file_options = { file_option* }

// MKDIR
parents_flag = { "-p" }

// MOUNT
mount_type = { "--simple" | "--layers" | "--overlay" }
mount_options = { mount_type? }

// INCLUDE
include_arg = ${ ident ~ ("=" ~ value)? }
include_args = { include_arg* }

// ENV
env_assign = ${ ident ~ "=" ~ string }

// FROM
raptor_source = { module_name ~ include_args }
docker_source = { "docker" ~ "://" ~ string }
from_source   = { docker_source | raptor_source }
